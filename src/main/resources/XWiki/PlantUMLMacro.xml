<?xml version="1.0" encoding="UTF-8"?>
<xwikidoc>
<web>XWiki</web>
<name>PlantUMLMacro</name>
<language></language>
<defaultLanguage>en</defaultLanguage>
<translation>0</translation>
<parent>Main.WebHome</parent>
<creator>XWiki.Admin</creator>
<author>XWiki.Admin</author>
<customClass></customClass>
<contentAuthor>XWiki.Admin</contentAuthor>
<creationDate>1299164229000</creationDate>
<date>1299836087000</date>
<contentUpdateDate>1299836087000</contentUpdateDate>
<version>1.1</version>
<title>PlantUML Macro</title>
<template></template>
<defaultTemplate></defaultTemplate>
<validationScript></validationScript>
<comment></comment>
<minorEdit>false</minorEdit>
<syntaxId>xwiki/2.0</syntaxId>
<hidden>false</hidden>
<object>
<class>
<name>XWiki.PlantUMLConfigurationClass</name>
<customClass></customClass>
<customMapping></customMapping>
<defaultViewSheet></defaultViewSheet>
<defaultEditSheet></defaultEditSheet>
<defaultWeb></defaultWeb>
<nameField></nameField>
<validationScript></validationScript>
<Server>
<disabled>0</disabled>
<name>Server</name>
<number>1</number>
<picker>0</picker>
<prettyName>Server</prettyName>
<size>30</size>
<unmodifiable>0</unmodifiable>
<validationMessage></validationMessage>
<validationRegExp></validationRegExp>
<classType>com.xpn.xwiki.objects.classes.StringClass</classType>
</Server>
</class>
<name>XWiki.PlantUMLMacro</name>
<number>0</number>
<className>XWiki.PlantUMLConfigurationClass</className>
<guid>bbbaf030-a93e-4ed8-a937-9505955b0a3d</guid>
<property>
<Server>http://www.plantuml.com/plantuml/</Server>
</property>
</object>
<object>
<class>
<name>XWiki.TagClass</name>
<customClass></customClass>
<customMapping></customMapping>
<defaultViewSheet></defaultViewSheet>
<defaultEditSheet></defaultEditSheet>
<defaultWeb></defaultWeb>
<nameField></nameField>
<validationScript></validationScript>
<tags>
<cache>0</cache>
<disabled>0</disabled>
<displayType>input</displayType>
<multiSelect>1</multiSelect>
<name>tags</name>
<number>1</number>
<prettyName>Tags</prettyName>
<relationalStorage>1</relationalStorage>
<separator>|</separator>
<separators>|,</separators>
<size>30</size>
<unmodifiable>0</unmodifiable>
<values></values>
<classType>com.xpn.xwiki.objects.classes.StaticListClass</classType>
</tags>
</class>
<name>XWiki.PlantUMLMacro</name>
<number>0</number>
<className>XWiki.TagClass</className>
<guid>66b0a9ba-f5ae-42a9-86e4-2524b89ed62e</guid>
<property>
<tags/>
</property>
</object>
<object>
<class>
<name>XWiki.WikiMacroClass</name>
<customClass></customClass>
<customMapping></customMapping>
<defaultViewSheet></defaultViewSheet>
<defaultEditSheet></defaultEditSheet>
<defaultWeb></defaultWeb>
<nameField></nameField>
<validationScript></validationScript>
<code>
<disabled>0</disabled>
<name>code</name>
<number>9</number>
<prettyName>Macro code</prettyName>
<rows>20</rows>
<size>40</size>
<unmodifiable>0</unmodifiable>
<classType>com.xpn.xwiki.objects.classes.TextAreaClass</classType>
</code>
<contentDescription>
<disabled>0</disabled>
<name>contentDescription</name>
<number>8</number>
<prettyName>Content description (Not applicable for "No content" type)</prettyName>
<rows>5</rows>
<size>40</size>
<unmodifiable>0</unmodifiable>
<classType>com.xpn.xwiki.objects.classes.TextAreaClass</classType>
</contentDescription>
<contentType>
<cache>0</cache>
<disabled>0</disabled>
<displayType>select</displayType>
<multiSelect>0</multiSelect>
<name>contentType</name>
<number>7</number>
<prettyName>Macro content type</prettyName>
<relationalStorage>0</relationalStorage>
<separator>|</separator>
<separators>|</separators>
<size>1</size>
<unmodifiable>0</unmodifiable>
<values>Optional|Mandatory|No content</values>
<classType>com.xpn.xwiki.objects.classes.StaticListClass</classType>
</contentType>
<defaultCategory>
<disabled>0</disabled>
<name>defaultCategory</name>
<number>4</number>
<prettyName>Default category</prettyName>
<size>30</size>
<unmodifiable>0</unmodifiable>
<classType>com.xpn.xwiki.objects.classes.StringClass</classType>
</defaultCategory>
<description>
<disabled>0</disabled>
<name>description</name>
<number>3</number>
<prettyName>Macro description</prettyName>
<rows>5</rows>
<size>40</size>
<unmodifiable>0</unmodifiable>
<classType>com.xpn.xwiki.objects.classes.TextAreaClass</classType>
</description>
<id>
<disabled>0</disabled>
<name>id</name>
<number>1</number>
<prettyName>Macro id</prettyName>
<size>30</size>
<unmodifiable>0</unmodifiable>
<classType>com.xpn.xwiki.objects.classes.StringClass</classType>
</id>
<name>
<disabled>0</disabled>
<name>name</name>
<number>2</number>
<prettyName>Macro name</prettyName>
<size>30</size>
<unmodifiable>0</unmodifiable>
<classType>com.xpn.xwiki.objects.classes.StringClass</classType>
</name>
<supportsInlineMode>
<disabled>0</disabled>
<displayFormType>select</displayFormType>
<displayType>yesno</displayType>
<name>supportsInlineMode</name>
<number>5</number>
<prettyName>Supports inline mode</prettyName>
<unmodifiable>0</unmodifiable>
<classType>com.xpn.xwiki.objects.classes.BooleanClass</classType>
</supportsInlineMode>
<visibility>
<cache>0</cache>
<disabled>0</disabled>
<displayType>select</displayType>
<multiSelect>0</multiSelect>
<name>visibility</name>
<number>6</number>
<prettyName>Macro visibility</prettyName>
<relationalStorage>0</relationalStorage>
<separator>|</separator>
<separators>|</separators>
<size>1</size>
<unmodifiable>0</unmodifiable>
<values>Current User|Current Wiki|Global</values>
<classType>com.xpn.xwiki.objects.classes.StaticListClass</classType>
</visibility>
</class>
<name>XWiki.PlantUMLMacro</name>
<number>0</number>
<className>XWiki.WikiMacroClass</className>
<guid>3c2a1f51-a4c5-48b8-bab2-9f4d41ac2e26</guid>
<property>
<code>{{groovy}}
// Utility class and method from plantUML to encode the UML text. See below the starting point of the macro.
import java.util.zip.*

byte[] compress(byte[] input) {
    int len = input.length + 100;
    Deflater compresser = new Deflater(9, true);
    compresser.setInput(input);
    compresser.finish();
    byte[] output = new byte[len];
    int compressedDataLength = compresser.deflate(output);
    byte[] result = new byte[compressedDataLength];
    System.arraycopy(output,0,result,0,compressedDataLength);
    return result;
}

class AsciiEncoder {
    char[] encode6bits = new char[64];

    public AsciiEncoder() {
        for (byte b = 0; b &lt; 64; b++) {
            encode6bits[b] = encode6bit(b as byte);
        }
    }

    public String encode(byte[] data) {
        final StringBuilder resu = new StringBuilder((int)((data.length * 4 + 2) / 3));
        for (int i = 0; i &lt; data.length; i += 3) {
            append3bytes(resu, data[i] &amp; 0xFF, i + 1 &lt; data.length ? data[i + 1] &amp; 0xFF : 0,
                    i + 2 &lt; data.length ? data[i + 2] &amp; 0xFF : 0);
        }
        return resu.toString();
    }

    private char encode6bit(byte b) {
        assert b &gt;= 0 &amp;&amp; b &lt; 64;
        if (b &lt; 10) {
            return (char)(('0' as char) + b);
        }
        b -= 10;
        if (b &lt; 26) {
            return (char)(('A' as char) + b);
        }
        b -= 26;
        if (b &lt; 26) {
            return (char)(('a' as char) + b);
        }
        b -= 26;
        if (b == 0) {
            return '-' as char;
        }
        if (b == 1) {
            return '_' as char;
        }
        assert false;
        return '?';
    }

    private void append3bytes(StringBuilder sb, int b1, int b2, int b3) {
        final int c1 = b1 &gt;&gt; 2;
        final int c2 = ((b1 &amp; 0x3) &lt;&lt; 4) | (b2 &gt;&gt; 4);
        final int c3 = ((b2 &amp; 0xF) &lt;&lt; 2) | (b3 &gt;&gt; 6);
        final int c4 = b3 &amp; 0x3F;
        sb.append(encode6bits[c1 &amp; 0x3F]);
        sb.append(encode6bits[c2 &amp; 0x3F]);
        sb.append(encode6bits[c3 &amp; 0x3F]);
        sb.append(encode6bits[c4 &amp; 0x3F]);
    }
}

// STARTING POINT
// Get the uml script
def umltext = xcontext.macro.content

// Add the optional 'include' content
def include = xcontext.macro.params.include
if (include) {
    def incDoc = xwiki.getDocument(include)
    if (incDoc != null) {
        umltext = incDoc.content + "\n" + umltext
    } else {
        println "**PlantUMLMacro WARNING**: Can't include page "+include
    }
}

// Get the configured server
def macrodoc = xcontext.getMacro().get("doc")
def serverurl
if (macrodoc.getObject("XWiki.PlantUMLConfigurationClass") != null) {
    serverurl = macrodoc.getObject("XWiki.PlantUMLConfigurationClass").get("Server")
}


if (serverurl == "") { // Uses the internal PlantUMLMacroGClass groovy implementation
    gObj = xwiki.parseGroovyFromPage( "XWiki.PlantUMLMacroGClass", "XWiki.PlantUMLMacroGClass")
    gObj.setObjects(doc, xcontext, umltext)
    println gObj.run( request, response)
} else { // Uses the external configured PlantUML server
    // Encode the UML content
    byte[] data = umltext.getBytes("UTF-8")
    byte[] compressed = compress(data)
    String encoded = new AsciiEncoder().encode(compressed)
    // Output the image wiki tag
    println "[[image:"+serverurl+"img/"+encoded+"||style=\"max-width:100%\"]]"
}
{{/groovy}}</code>
</property>
<property>
<contentDescription>The diagram definition using PlanUML's syntax.</contentDescription>
</property>
<property>
<contentType>Mandatory</contentType>
</property>
<property>
<defaultCategory>content</defaultCategory>
</property>
<property>
<description>Generate Diagrams using PlantUML.</description>
</property>
<property>
<id>plantuml</id>
</property>
<property>
<name>PlantUML</name>
</property>
<property>
<supportsInlineMode>0</supportsInlineMode>
</property>
<property>
<visibility>Global</visibility>
</property>
</object>
<object>
<class>
<name>XWiki.WikiMacroParameterClass</name>
<customClass></customClass>
<customMapping></customMapping>
<defaultViewSheet></defaultViewSheet>
<defaultEditSheet></defaultEditSheet>
<defaultWeb></defaultWeb>
<nameField></nameField>
<validationScript></validationScript>
<defaultValue>
<disabled>0</disabled>
<name>defaultValue</name>
<number>4</number>
<prettyName>Parameter default value</prettyName>
<size>30</size>
<unmodifiable>0</unmodifiable>
<classType>com.xpn.xwiki.objects.classes.StringClass</classType>
</defaultValue>
<description>
<disabled>0</disabled>
<name>description</name>
<number>2</number>
<prettyName>Parameter description</prettyName>
<rows>5</rows>
<size>40</size>
<unmodifiable>0</unmodifiable>
<classType>com.xpn.xwiki.objects.classes.TextAreaClass</classType>
</description>
<mandatory>
<disabled>0</disabled>
<displayFormType>select</displayFormType>
<displayType>yesno</displayType>
<name>mandatory</name>
<number>3</number>
<prettyName>Parameter mandatory</prettyName>
<unmodifiable>0</unmodifiable>
<classType>com.xpn.xwiki.objects.classes.BooleanClass</classType>
</mandatory>
<name>
<disabled>0</disabled>
<name>name</name>
<number>1</number>
<prettyName>Parameter name</prettyName>
<size>30</size>
<unmodifiable>0</unmodifiable>
<classType>com.xpn.xwiki.objects.classes.StringClass</classType>
</name>
</class>
<name>XWiki.PlantUMLMacro</name>
<number>0</number>
<className>XWiki.WikiMacroParameterClass</className>
<guid>cddb79cf-ee98-4c20-9123-f27b54e577cc</guid>
<property>
<defaultValue></defaultValue>
</property>
<property>
<description>The content of the specified wiki page will be inserted at the begining of the diagram definition.</description>
</property>
<property>
<mandatory>0</mandatory>
</property>
<property>
<name>include</name>
</property>
</object>
<content>This macro enables you to include UML diagrams inside your wiki pages using **PlantUML** ([[http://plantuml.sourceforge.net]]).

== Configuration ==

{{velocity}}
#if ($doc.getObject("XWiki.PlantUMLConfigurationClass").Server != '')
The configured active server is :** $doc.getObject("XWiki.PlantUMLConfigurationClass").Server **
#else
**No server specified**, using the embedded PlantUML implementation.
#end

To specify your own PlantUML server, {{html}}&lt;a href="$xwiki.getURL( $doc.getFullName(), "edit", "editor=object&amp;classname=XWiki.PlantUMLConfigurationClass&amp;object=0")"&gt;edit this URL&lt;/a&gt;{{/html}}.
The default value is {{html}}http://www.plantuml.com/plantuml/{{/html}}
Be careful, the server URL must end with a slash.
{{/velocity}}

== Version information ==

{{plantuml}}
version
{{/plantuml}}
</content></xwikidoc>
